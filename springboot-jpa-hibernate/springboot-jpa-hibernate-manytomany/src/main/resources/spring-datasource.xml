<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close"><!-- 设置为close使Spring容器关闭同时数据源能够正常关闭，以免造成连接泄露 -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/hbm"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
        <property name="defaultReadOnly" value="false"/><!-- 设置为只读状态，配置读写分离时，读库可以设置为true
		在连接池创建后，会初始化并维护一定数量的数据库安连接，当请求过多时，数据库会动态增加连接数，
		当请求过少时，连接池会减少连接数至一个最小空闲值 -->
        <property name="initialSize" value="5"/><!-- 在启动连接池初始创建的数据库连接，默认为0 -->
        <property name="maxActive" value="15"/><!-- 设置数据库同一时间的最大活跃连接默认为8，负数表示不闲置 -->
        <property name="maxIdle" value="10"/><!-- 在连接池空闲时的最大连接数，超过的会被释放，默认为8，负数表示不闲置 -->
        <property name="minIdle" value="2"/><!-- 空闲时的最小连接数，低于这个数量会创建新连接，默认为0 -->
        <property name="maxWait" value="10000"/><!-- 连接被用完时等待归还的最大等待时间，单位毫秒，超出时间抛异常，默认为无限等待 -->
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <!-- MySQL的方言 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
                <!-- 必要时在数据库新建所有表格 -->
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="current_session_context_class">thread</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
        <property name="packagesToScan"
                  value="org.ostenant.springboot.learning.examples.entities"/><!-- 配置需要扫描的包路径，在该包下，所有的类注解配置都会被扫描 -->
    </bean>
</beans>